version: "3.8"

networks:
  ziafat_network:

services:
  backend:
    build: ./backend
    image: ziafat-backend:v1.0.0
    container_name: backend
    restart: unless-stopped
    volumes:
        - ./backend:/app
    ports:
      - "${BACKEND_INNER_PORT}:${BACKEND_INNER_PORT}"
    networks:
      - ziafat_network
    environment:
      SECRET_KEY : ${SECRET_KEY}
      DEBUG : ${DEBUG}
      SUPERUSER : ${SUPERUSER}
      SUPEREMAIL : ${SUPEREMAIL}
      SUPERPASS : ${SUPERPASS}
      BACKEND_INNER_PORT : ${BACKEND_INNER_PORT}
      BACKED_CONTAINER_NAME : backend
      DB_CONTAINER_NAME : backend_db
      DB_INNER_PORT : 5432
      BACKEND_DB : postgres
      BACKEND_USER : postgres
      BACKEND_USER_PASSWORD : ${BACKEND_USER_PASSWORD}

    command: /bin/sh -c "python3 manage.py makemigrations &&
                                              python3 manage.py makemigrations reception &&
                                              python3 manage.py migrate &&
                                              yes yes | python3 manage.py create_superuser &&
                                              yes yes | python3 manage.py collectstatic &&
                                              python3 manage.py runserver 0.0.0.0:${BACKEND_INNER_PORT}"
    depends_on:
      - backend_db

  # Database
  backend_db:
    image: postgres:14-alpine
    container_name: backend_db
    restart: always

    expose:
      - "5432"

    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      timeout: 10s
      interval: 10s
      retries: 10

    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${BACKEND_USER_PASSWORD}

    volumes:
      - postgres_data:/var/lib/postgresql/data # data persistence

    networks:
      - ziafat_network

volumes:
  postgres_data:
    driver: local